version: '3.8'

services:

  nf-elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION}
    container_name: nf-elastic
    
    volumes:
      - ./volumes/es:/usr/share/elasticsearch/data

    networks:
      nf-net:
        ipv4_address: 192.168.30.2

    environment:
      TZ: Europe/Moscow
      cluster.name: 'otus-proj'
      bootstrap.memory_lock: 'true'
      network.host: ${SERVER_HOST}
      http.port: ${ELASTIC_PORT}
      ELASTIC_USERNAME: ${ELASTIC_USER}      
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      xpack.license.self_generated.type: ${LICENSE}
      discovery.type: 'single-node'
      indices.query.bool.max_clause_count: 8192
      search.max_buckets: 250000
      action.destructive_requires_name: 'true'
      xpack.security.enabled: false
      ES_JAVA_OPTS: '-Xms4g -Xmx4g'
      http.compression: 'true'
    
    healthcheck:
      test:     
        [
          "CMD-SHELL",
          "curl -s --user ${ELASTIC_USER}:${ELASTIC_PASSWORD} -X GET ${FELASTIC_HOST}/_cluster/health?pretty | grep status | grep -q '\\(green\\|yellow\\)'",
        ]
      interval: 10s
      timeout: 10s
      retries: 10

  nf-kibana:
    image: docker.elastic.co/kibana/kibana:${STACK_VERSION}
    container_name: 
      nf-kibana
    depends_on:
      nf-elastic:
        condition: service_healthy
    networks:
      nf-net:
        ipv4_address: 192.168.30.3
    environment:
      TZ: Europe/Moscow
      ELASTIC_HOST: ${FELASTIC_HOST}
      SERVER_HOST: ${SERVER_HOST}
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl -s -I ${FKIBANA_HOST} | grep -q 'HTTP/1.1 302 Found'",
         ]
      interval: 10s
      timeout: 10s
      retries: 5

  nf-filebeat:     
    image: docker.elastic.co/beats/filebeat:${STACK_VERSION}
    container_name: 
      nf-filebeat
    depends_on:
      nf-elastic:
        condition: service_healthy
      nf-kibana:
        condition: service_healthy
    configs:
      - source: filebeat_config
        target: /usr/share/filebeat/filebeat.yml
    network_mode: host
    environment:
      TZ: Europe/Moscow
      KIBANA_HOST: ${FKIBANA_HOST}
      ELASTIC_HOST: ${FELASTIC_HOST}
      ELASTIC_USER: ${ELASTIC_USER}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      BINDING_IP: ${MAIN_HOST_IP}
      NF_PORT: ${NF_PORT}
      CEF_PORT: ${CEF_PORT}
      SYSLOG_PORT: ${SYSLOG_PORT}
      DNS_IP: ${DNS_IP}
    healthcheck:
      test: filebeat test config
      interval: 10s
      timeout: 10s
      retries: 5

  nf-nginx:
    image: nginx:latest
    container_name: 
      nf-nginx
    depends_on:
      nf-elastic:
        condition: service_healthy
      nf-kibana:
        condition: service_healthy
      nf-filebeat:
        condition: service_healthy
    networks:
      nf-net:
        ipv4_address: 192.168.30.4
    environment:
      TZ: Europe/Moscow
    volumes:
      - ./volumes/nginx:/etc/nginx
    ports: 
      - "8443:443"
    healthcheck:
      test: service nginx status || exit 1
      interval: 15s
      timeout: 15s
      retries: 5
      
networks: 
  nf-net: 
    name: nf-net 
    ipam: 
      config: 
        - subnet: "192.168.30.0/24"
          gateway: "192.168.30.1"

configs:
  filebeat_config:
    file: ./config/filebeat.docker.yml
  kibana_config:
    file: ./config/kibana.docker.yml
